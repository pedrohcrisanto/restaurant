name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby: ["3.2", "3.3"]

    env:
      RAILS_ENV: test
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      BUNDLE_WITHOUT: production
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: restaurant_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libpq-dev postgresql-client build-essential

      - name: Print Ruby and Bundler versions
        run: |
          ruby -v
          bundle -v

      - name: Prepare database
        run: |
          bin/rails db:prepare

      - name: Run RSpec
        run: |
          bin/rspec --format documentation --color


  lint:
    runs-on: ubuntu-latest
    env:
      BUNDLE_WITHOUT: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Print Ruby and Bundler versions
        run: |
          ruby -v
          bundle -v

      - name: Run RuboCop
        run: |
          bundle exec rubocop -f github || bundle exec rubocop

