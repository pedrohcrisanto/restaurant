name: CI
on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prechecks: # REQUIRED
    name: Prechecks (lint+segurança+config)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - name: RuboCop
        run: bundle exec rubocop
      - name: Bundler Audit
        run: bundle exec bundle audit check --update
      - name: Brakeman (Rails SAST)
        run: bundle exec brakeman -q -w2
      - name: YAML lint
        run: |
          sudo apt-get update && sudo apt-get install -y yamllint
          yamllint .
      - name: JSON lint (configs)
        run: |
          sudo apt-get install -y jq
          set -o pipefail
          git ls-files '*.json' | xargs -I{} sh -c 'jq -e . {} > /dev/null'
      - name: Dockerfile lint (se existir)
        if: ${{ hashFiles('Dockerfile') != '' }}
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  test: # REQUIRED
    name: RSpec
    needs: prechecks
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - name: Prepare DB
        run: bin/rails db:prepare
      - name: Run RSpec
        run: bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec.xml
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            tmp/rspec.xml
            coverage/

  migrations: # REQUIRED
    name: Migrações limpas + verificação
    needs: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - name: Reset + migrate do zero
        run: bin/rails db:drop db:create db:migrate
      - name: Strong Migrations (se instalado)
        run: |
          if bundle exec rake -T | grep -q strong_migrations:check; then
            bundle exec rake strong_migrations:check
          else
            echo "strong_migrations não detectado; pulando."
          fi

  build_and_scan: # REQUIRED
    name: Build Docker + Scan CVEs
    needs: migrations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build imagem
        run: docker build -t app:ci .
      - name: Trivy scan (CRITICAL/HIGH falham)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: app:ci
          format: table
          exit-code: 1
          severity: CRITICAL,HIGH

  # ===== Alto valor (recomendados) =====
  contracts:
    name: Validar OpenAPI/Swagger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint OpenAPI
        run: |
          npm i -g @redocly/cli
          # Tenta validar o arquivo principal; se falhar, tenta o de public
          redocly lint ./swagger/v1/swagger.yaml || redocly lint ./public/api-docs/v1/swagger.json

  n_plus_one:
    name: N+1 detector (subset de specs)
    needs: test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
      BULLET: true
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - run: bin/rails db:prepare
      - name: Rodar subset sensível a N+1 (requests + repositories)
        run: |
          # Ajuste os caminhos conforme necessidade do projeto
          if [ -d spec/requests ]; then
            PATHS="spec/requests"
          fi
          if [ -d spec/repositories ]; then
            PATHS="$PATHS spec/repositories"
          fi
          if [ -z "$PATHS" ]; then
            PATHS="spec"
          fi
          bundle exec rspec $PATHS

  reek:
    name: Reek (code smells)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - run: bundle exec reek || true # inicialmente informativo

  licenses:
    name: Verificação de licenças
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - run: |
          if bundle exec license_finder approvals; then
            echo "Licenças OK"
          else
            echo "Reprovar por licenças" && exit 1
          fi

  i18n:
    name: i18n-tasks (chaves órfãs/ausentes)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "+~> 3.3"
          bundler-cache: true
      - run: |
          if bundle exec i18n-tasks health; then
            echo "i18n OK"
          else
            echo "Problemas de i18n" && exit 1
          fi
